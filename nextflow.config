process {
    publishDir = {"./Results_Infant_Tracking/$sid/$task.process"}
    scratch = true
    errorStrategy = { task.attempt <= 3 ? 'retry' : 'ignore' }
    maxRetries = 3
    maxErrors = -1
    stageInMode = 'copy'
    stageOutMode = 'rsync'
    tag = { "$sid" }
    afterScript = 'sleep 1'
}

params {
    help = false
    input = false
    processes = false

    // Global Options
    b0_thr = 10
    dwi_shell_tolerance = 20

    // BET DWI Options
    initial_bet_f = 0.5
    final_bet_f = 0.35

    // BET T2 Options
    run_bet_t2w = false
    bet_t2w_f = 0.16

    // EDDY and TOPUP Options
    topup_config = "b02b0.cnf"
    encoding_direction = "y"
    readout = 0.062
    topup_prefix = "topup_results"
    topup_bet_f = 0.16
    eddy_cmd = "eddy_cpu"
    use_slice_drop_correction = true

    // NORMALIZE Options
    fa_mask_threshold = 0.10

    // RESAMPLE_ANAT Options
    t2w_resolution = 1
    t2w_interpolation = "lin"
    mask_interpolation = "nn"

    // RESAMPLE_DWI Options
    dwi_resolution = 1
    dwi_interpolation = "lin"
    mask_dwi_interpolation = "nn"

    // EXTRACT_DTI_SHELLS Options
    max_dti_shell_value = 1200

    // SH_FITTING_SHELL Options
    sh_fitting = false
    sh_fitting_order = 6
    sh_fitting_basis = "descoteaux07"

    // FODF Options
    min_fodf_shell_value = 700
    max_fa_in_ventricle = 0.1
    min_md_in_ventricle = 0.00185
    relative_threshold = 0.1
    basis = "descoteaux07"
    sh_order = 8

    // FRF Options
    mean_frf = false
    fa = 0.7
    min_fa = 0.5
    min_nvox = 300
    roi_radius = 20
    set_frf = true
    manual_frf = "12,7,7"

    // Seeding and tracking Options
    fa_seeding_mask_thr = 0.1
    algo = "prob"
    nb_seeds = 10
    seeding = "npv"
    step_size = 0.5
    theta = 20
    sfthres = 0.1
    min_len = 10
    max_len = 200
    tracking_seed = 0
    use_brain_mask_as_tracking_mask = false

    // Processes per tasks
    processes_denoise_dwi = 4
    processes_eddy = 1
    processes_registration = 4
    processes_fodf = 4

    // Output Directory
    output_dir = false

    Mean_FRF_Publish_Dir = "./Results_Infant_Tracking/Mean_FRF"
}

if(params.output_dir) {
    process.publishDir = {"$params.output_dir/$sid/$task.process"}
    params.Mean_FRF_Publish_Dir = "${params.output_dir}/Mean_FRF"
}

if(params.processes) {
    if(params.processes > Runtime.runtime.availableProcessors()) {
        throw new RuntimeException("Number of processes higher than available CPUs.")
    }
    else if(params.processes < 1) {
        throw new RuntimeException("When set, number of processes must be >= 1 " +
                                   "and smaller or equal to the number of CPUs.")
    }
    else {
        executor.$local.cpus = params.processes
    }
}

singularity.autoMounts = true

profiles {
    no_symlink {
        process{
            publishDir = [path: {"./Results_Infant_Tracking/$sid/$task.process"}, mode: 'copy']
        }
    }

    macos {
        process.scratch="/tmp"
    }
}